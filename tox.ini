[tox]
minversion=3.7
envlist = codemod,black,mypy,py27,py35,py36,py37,cover

[testenv]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements_dev.txt
    pytest
    pytest-cov
    pytest-xdist
setenv =
    py{27,35,36}: COVERAGE_FILE={envdir}/.coverage
commands =
    python -m pytest --cov=wandb --cov=tests/ --cov-report= --no-cov-on-fail

[testenv:codemod]
skip_install = true
deps =
    libcst
commands=
    /bin/bash -c './tools/strip_type_annotations.sh'

[testenv:flake8]
basepython=python3
skip_install = true
deps =
    flake8
    flake8-colors
    # flake8-bugbear
    # flake8-docstrings>=1.3.1
    # flake8-import-order>=0.9
    # flake8-typing-imports>=1.1
    # pep8-naming
commands = 
    flake8

[testenv:pylint]
basepython=python3
deps=pylint
commands=
	pylint -rn --rcfile={toxinidir}/.pylintrc wandb.sdk

[testenv:mypy]
basepython=python3
skip_install = true
deps=
    mypy
setenv =
    MYPYPATH = {toxinidir}
commands=
    mypy --show-error-codes --config-file {toxinidir}/mypy.ini -p wandb

[testenv:coverage]
basepython=python3
deps=
    coverage
    pytest
commands=
    coverage run --source wandb -m pytest
    coverage report -m

[testenv:yapf]
basepython=python3
skip_install = true
deps=
    yapf
commands=
    /bin/bash -c 'yapf -d {toxinidir}/wandb/sdk/*.py'

[testenv:format]
basepython=python3
skip_install = true
deps=
    black
commands=
    black wandb/

[testenv:black]
basepython=python3
skip_install = true
deps=
    black
commands=
    black --check wandb/
	
[flake8]
ignore = D203, W503, E203
max-line-length=180
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/fixtures/*,
    tests/,
    codemod/,
    wandb/__init__.py,
    wandb/data/,
    wandb/errors/,
    wandb/framework/,
    wandb/util/,
    wandb/stuff/,
    wandb/sdk_py27/,
    wandb/backend/,
    wandb/internal/,
    wandb/proto/,
    wandb/apis/,
    wandb/cli/,
    wandb/keras/,
    wandb/interface/,
    wandb/compat/,
    wandb/superagent/,
    vendor/,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs
max-complexity = 15
import-order-style = google
application-import-names = flake8
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s

[testenv:covercircle]
skip_install = true
basepython = python3
passenv = CIRCLECI CIRCLE_* CI_PULL_REQUEST COVERALLS_PARALLEL COVERALLS_REPO_TOKEN
deps =
    pytest
    coverage
    coveralls
setenv =
    CIRCLE_BUILD_NUM={env:CIRCLE_WORKFLOW_ID}
commands =
    /usr/bin/env bash -c '{envpython} -m coverage combine {toxworkdir}/py*/.coverage'
    coverage report --ignore-errors --skip-covered --include wandb/*
    coveralls

[testenv:cover]
skip_install = true
# basepython = python3.6
deps =
    pytest
    coverage
commands =
    /usr/bin/env bash -c '{envpython} -m coverage combine {toxworkdir}/py*/.coverage'
    coverage report --fail-under 100 --skip-covered --include tests/*
    #coverage report --fail-under 25  --skip-covered --show-missing --include wandb/*
    coverage report --fail-under 25  --skip-covered --include wandb/*

[testenv:coveralls]
# NOTE: Coveralls should be run with:
#   tools/coveralls.sh
# basepython = python3
deps =
    coveralls
commands =
    coveralls
